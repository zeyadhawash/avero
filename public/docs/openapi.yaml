openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/register:
    post:
      summary: 'Register in the user.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"user\": \"{ email:testuser@example.com,name :testuser,passwor:secret }\",\n \"token\": \"...re@23ds&f\",\n}"
      tags:
        - 'Auth management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the  user.'
                  example: testuser
                email:
                  type: string
                  description: 'The email of the  user.'
                  example: testuser@example.com
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: secret
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: 'login User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Auth management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: impedit
                password:
                  type: string
                  description: ''
                  example: corrupti
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'logout a user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Auth management'
  /api/Influencer:
    get:
      summary: 'display all Influencer'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Influencer management'
    post:
      summary: 'creat  Influencer'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Influencer management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: illo
                email:
                  type: string
                  description: ''
                  example: ut
                password:
                  type: string
                  description: ''
                  example: voluptate
                picture:
                  type: string
                  format: binary
                  description: ''
                country:
                  type: string
                  description: ''
                  example: aut
                categories:
                  type: string
                  description: ''
                  example: totam
                interesting:
                  type: string
                  description: ''
                  example: rem
                age:
                  type: string
                  description: ''
                  example: aut
                phone_number:
                  type: string
                  description: ''
                  example: unde
                Country:
                  type: string
                  description: ''
                  example: repellendus
                Age:
                  type: string
                  description: ''
                  example: alias
              required:
                - country
                - categories
                - age
  '/api/Influencer/{id}':
    get:
      summary: 'show  Influencer'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Influencer management'
    put:
      summary: 'update  Influencer'
      description: ''
      parameters:
        -
          in: query
          name: picture
          description: file
          example: blanditiis
          required: false
          schema:
            type: string
            description: file
            example: blanditiis
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Influencer management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: vitae
                email:
                  type: string
                  description: ''
                  example: dolorum
                password:
                  type: string
                  description: ''
                  example: dolores
                picture:
                  type: string
                  description: ''
                  example: est
                Country:
                  type: string
                  description: ''
                  example: eligendi
                Age:
                  type: string
                  description: ''
                  example: voluptatum
                phone_number:
                  type: string
                  description: ''
                  example: ut
              required:
                - picture
    delete:
      summary: 'destroy  Influencer'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Influencer management'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Influencer.'
        example: 11
        required: true
        schema:
          type: integer
  /api/Service:
    get:
      summary: 'display all Service'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Service management'
    post:
      summary: 'store  Service'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Service management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: exercitationem
  '/api/Service/{id}':
    get:
      summary: 'show  Service'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Service management'
    put:
      summary: 'update  Service'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Service management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                services:
                  type: string
                  description: ''
                  example: repudiandae
    delete:
      summary: 'destroy Service'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Service management'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Service.'
        example: 20
        required: true
        schema:
          type: integer
  /api/Story:
    post:
      summary: 'creat  Story'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Story  management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                stories:
                  type: string
                  description: ''
                  example: doloremque
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Story  management'
  '/api/Story/{id}':
    get:
      summary: 'show  story'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Story  management'
    delete:
      summary: 'destroy  story'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Story  management'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Story.'
        example: 14
        required: true
        schema:
          type: integer
  /api/Ticket:
    get:
      summary: 'display all Ticket'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ticket management'
    post:
      summary: 'store  Ticket'
      description: ''
      parameters:
        -
          in: query
          name: status
          description: ''
          example: reprehenderit
          required: false
          schema:
            type: string
            description: ''
            example: reprehenderit
        -
          in: query
          name: price
          description: ''
          example: molestiae
          required: false
          schema:
            type: string
            description: ''
            example: molestiae
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Ticket management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: alias
                influencer_id:
                  type: string
                  description: ''
                  example: quod
                service_id:
                  type: string\
                  description: ''
                  example: illo
                payment_method:
                  type: string
                  description: ''
                  example: sit
  '/api/Ticket/{id}':
    get:
      summary: 'show  Ticket'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ticket management'
    put:
      summary: 'update  Ticket'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Ticket management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: doloribus
    delete:
      summary: 'destroy ticket'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Ticket management'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Ticket.'
        example: 8
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Auth management'
    description: "\nAPIs for managing   Auth users"
  -
    name: 'Influencer management'
    description: "\nAPIs for managing Influencer"
  -
    name: 'Service management'
    description: "\nAPIs for managing  Service"
  -
    name: 'Story  management'
    description: "\nAPIs for managing  Story"
  -
    name: 'Ticket management'
    description: "\nAPIs for managing  Ticket"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
